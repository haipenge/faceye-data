<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.faceye</groupId>
	<artifactId>faceye-data</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>faceye-data</name>
	<packaging>jar</packaging>
	<properties>
		<!-- 文件拷贝时的编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- 编译时的编码 -->
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<!-- Set Default JDK -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
		<!-- Project Version's -->
		<hadoop.version>2.7.3</hadoop.version>
		<mysql.version>5.1.42</mysql.version>
		<mongo-java-driver.version>3.4.2</mongo-java-driver.version>
		<mongo-hadoop-core.version>1.5.1</mongo-hadoop-core.version>
		<hbase-client.version>1.2.6</hbase-client.version>
		<hive.version>2.3.0</hive.version>
		<spark.version>2.2.0</spark.version>
		<storm.version>1.1.1</storm.version>
		<storm.version>1.1.1</storm.version>
		<kafka-clients.version>0.11.0.0</kafka-clients.version>
		<elasticsearch.version>5.5.2</elasticsearch.version>
		<jedis.version>2.9.0</jedis.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-hdfs</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-common</artifactId>
			<version>${hadoop.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo-java-driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb.mongo-hadoop</groupId>
			<artifactId>mongo-hadoop-core</artifactId>
			<version>${mongo-hadoop-core.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-client</artifactId>
			<version>${hbase-client.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hive</groupId>
			<artifactId>hive-jdbc</artifactId>
			<version>${hive.version}</version>
		</dependency>

		<dependency> <!-- Spark dependency -->
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.11</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_2.10</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming_2.10</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka-clients.version}</version>
			<!-- <scope>provided</scope> -->
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming-kafka-0-10_2.11</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
		    <groupId>redis.clients</groupId>
		    <artifactId>jedis</artifactId>
		    <version>${jedis.version}</version>
		</dependency>
<!-- 
		<dependency>
			<groupId>org.apache.storm</groupId>
			<artifactId>storm-core</artifactId>
			<version>${storm.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.storm</groupId>
			<artifactId>storm-kafka</artifactId>
			<version>${storm.version}</version>
			<scope>provided</scope>
		</dependency>
		 -->
		<!-- <dependency> <groupId>org.elasticsearch.client</groupId> <artifactId>transport</artifactId> 
			<version>${elasticsearch.version}</version> <scope>provided</scope> </dependency> 
			<dependency> <groupId>org.elasticsearch</groupId> <artifactId>elasticsearch-hadoop</artifactId> 
			<version>${elasticsearch.version}</version> <scope>provided</scope> </dependency> -->
		<dependency>
			<groupId>jdk.tools</groupId>
			<artifactId>jdk.tools</artifactId>
			<version>1.8</version>
			<scope>system</scope>
			<systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>
		</dependency>
	</dependencies>

	<!-- Package as an executable jar -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<!-- not append assembly id in release file name -->
					<appendAssemblyId>false</appendAssemblyId>
					<!-- <descriptors> <descriptor> src/main/assemble/package.xml </descriptor> 
						</descriptors> -->
				</configuration>
				<executions>
					<execution>
						<id>make-jar</id><!-- 随便一个名字 -->
						<phase>package</phase><!-- 绑定到package生命周期阶段上 -->
						<goals>
							<goal>single</goal><!-- 只运行一次 -->
						</goals>
						<configuration>
							<skipAssembly>false</skipAssembly><!-- 跳过这个执行器 -->
							<!-- 自定义输出目录（finalName为最终项目构建名称） -->
							<!-- <outputDirectory> ${project.build.directory}/${project.build.finalName}/WEB-INF/lib 
								</outputDirectory> -->
							<!-- 描述符文件 -->
							<!-- <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
								</descriptorRefs> -->
							<descriptors>
								<descriptor>src/main/resources/assembly/jar.xml</descriptor>
							</descriptors>
							<archive>
								<manifest>
									<mainClass>com.faceye.component.data.Runner</mainClass>
									<!-- <mainClass>com.faceye.component.hadoop.service.stock.mapreduce.InitStockRunner</mainClass> -->
									<!-- <mainClass>com.faceye.component.hadoop.service.mapreduce.example.ExampleRunner</mainClass> -->
									<!-- <mainClass>com.faceye.component.hadoop.service.mapreduce.example.WordCount</mainClass> -->
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
					</execution>
					<!-- <execution> <id>make-zip</id> <phase>package</phase> <goals> <goal>single</goal> 
						</goals> <configuration> <skipAssembly>true</skipAssembly> <descriptors> 
						<descriptor>src/main/assembly/zip.xml</descriptor> </descriptors> </configuration> 
						</execution> -->
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-shade-plugin</artifactId> 
				<version>1.4</version> <configuration> <createDependencyReducedPom>true</createDependencyReducedPom> 
				</configuration> <executions> <execution> <phase>package</phase> <goals> 
				<goal>shade</goal> </goals> <configuration> <transformers> <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" 
				/> <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"> 
				<mainClass></mainClass> </transformer> </transformers> </configuration> </execution> 
				</executions> </plugin> -->
		</plugins>
	</build>

	<!-- Add Spring repositories -->
	<!-- (you don't need this if you are using a .RELEASE version) -->
	<repositories>

	</repositories>
	<pluginRepositories>

	</pluginRepositories>
</project>
